
<?php
/**
 * The following file has been generated by CodeGenPHP. 
 * Make sure you don't edit any of the files, because they will be overwritten by the next run. 
 * 
 * Made by CodeGenPHP - author: Steven K https://stevenkoerts.nl/
*/


    require_once('../../../utils/DefaultHeaders.php');
require_once('../../../utils/DbConnection.php');
require_once('../../../utils/HttpResult.php');
require_once('../../../utils/utils.php');
require_once('../../../config.php');


class Entity {
    function __construct($_entity, $_can_create, $_can_view, $_can_edit, $_can_delete) {
        $entity = $_entity;
        $can_create = $_can_create;
        $can_view = $_can_view;
        $can_edit = $_can_edit;
        $can_delete = $_can_delete;
    }
}

function can_view($entity, $role) {
    switch ($entity) {
        
case 'date_and_time':
    return true;

case 'reservations':
    return true;

case 'discount_code':
    return true;

case 'theater_show':
    return true;

case 'director':
    return true;

case 'admin':
    return true;

case 'reseller':
    return true;

case 'actor':
    return true;

case 'location':
    return true;

case 'link':
    return true;

case 'customer':
    return true;

    }
}
                
function can_create($entity, $role) {
    switch ($entity) {
        
case 'date_and_time':
    return true;

case 'reservations':
    return true;

case 'discount_code':
    return true;

case 'theater_show':
    return true;

case 'director':
    return true;

case 'admin':
    return true;

case 'reseller':
    return true;

case 'actor':
    return true;

case 'location':
    return true;

case 'link':
    return true;

case 'customer':
    return true;

        default:
            return false;
    }
}

function can_edit($entity, $role) {
    switch ($entity) {
        
case 'date_and_time':
    return true;

case 'reservations':
    return true;

case 'discount_code':
    return true;

case 'theater_show':
    return true;

case 'director':
    return true;

case 'admin':
    return true;

case 'reseller':
    return true;

case 'actor':
    return true;

case 'location':
    return true;

case 'link':
    return true;

case 'customer':
    return true;

            default:
                return false;
        }
    }
                
function can_delete($entity, $role) {
    switch ($entity) {
        
case 'date_and_time':
    return true;

case 'reservations':
    return true;

case 'discount_code':
    return true;

case 'theater_show':
    return true;

case 'director':
    return true;

case 'admin':
    return true;

case 'reseller':
    return true;

case 'actor':
    return true;

case 'location':
    return true;

case 'link':
    return true;

case 'customer':
    return true;

            default:
                return false;
        }
    }
    
    
    session_start();
    if (isset($_SESSION["id"]) and isset($_SESSION["role"])) {
        $id = $_SESSION["id"];
        $role = $_SESSION["role"];

    $entities = array(
        'date_and_time','reservations','discount_code','theater_show','director','admin','reseller','actor','location','link','customer'
    );

    $permissions = array_map(function ($e) {
        global $role;
        return array(
            "entity" => $e,
            "can_create" => can_create($e, $role), 
            "can_view" => can_view($e, $role), 
            "can_edit" => can_edit($e, $role), 
            "can_delete" => can_delete($e, $role)
            );
    }, $entities);

    $result = array();
    foreach ($permissions as $value) {
        global $role; 
        if ($value["can_view"]) {
            array_push($result, $value);
        }
    }

    echo json_encode(new HttpResult($result, 200));
} else {
    echo json_encode(new HttpResult([], 403));
}
    

?>