
<?php
/**
 * The following file has been generated by CodeGenPHP. 
 * Make sure you don't edit any of the files, because they will be overwritten by the next run. 
 * 
 * Made by CodeGenPHP - author: Steven K https://stevenkoerts.nl/
*/


require_once('../../../utils/DefaultHeaders.php');
require_once('../../../utils/DbConnection.php');
require_once('../../../utils/HttpResult.php');
require_once('../../../utils/utils.php');
require_once('../../../config.php');

if (!allow_request_methods(["POST"])) {
    die("Request not allowed");
}

$connection = new DbConnection();

/**
 * Login data will be send through a post request 
 * {
 *    "UserName": "user1", 
 *    "Password": "test1234", 
 *    "role": "user" <-- The role is the table where we select from. 
 * }
 */
$data = json_decode(file_get_contents("php://input")); 

//if (isset($data->UserName) and isset($data->Password) and isset($data->role)) {
if (isset($data->role)) {
    if (in_array($data->role, LOGGABLE_ENTITIES)) {

        //Entities can have any attrubute set as username or password 

        switch ($data->role) {
            
    case "director":
        if (isset($data->Name) and isset($data->Password)) { // generated variables
            $encrypted_password = md5($data->Password); // Password can be called anything
            $sql = "SELECT Id FROM $data->role WHERE Name = '$data->Name' and Password = '$encrypted_password'"; // UserName can be anything
            $result = $connection->GetQueryResult($sql);
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    session_start();
                    $_SESSION['id'] = $row['Id'];
                    $_SESSION['role'] = $data->role;
                    break;
                }
                echo json_encode(new HttpResult(array(
                    "id" => $_SESSION["id"],
                    "role" => $_SESSION["role"]
                ), 200));
            } else {
                echo json_encode(new HttpResult("Wrong credentials", 201));
            }
        } else {
            echo json_encode(new HttpResult("Incomplete request", 201));
        }
        break;
    
    case "admin":
        if (isset($data->Name) and isset($data->Password)) { // generated variables
            $encrypted_password = md5($data->Password); // Password can be called anything
            $sql = "SELECT Id FROM $data->role WHERE Name = '$data->Name' and Password = '$encrypted_password'"; // UserName can be anything
            $result = $connection->GetQueryResult($sql);
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    session_start();
                    $_SESSION['id'] = $row['Id'];
                    $_SESSION['role'] = $data->role;
                    break;
                }
                echo json_encode(new HttpResult(array(
                    "id" => $_SESSION["id"],
                    "role" => $_SESSION["role"]
                ), 200));
            } else {
                echo json_encode(new HttpResult("Wrong credentials", 201));
            }
        } else {
            echo json_encode(new HttpResult("Incomplete request", 201));
        }
        break;
    
    case "reseller":
        if (isset($data->Name) and isset($data->Password)) { // generated variables
            $encrypted_password = md5($data->Password); // Password can be called anything
            $sql = "SELECT Id FROM $data->role WHERE Name = '$data->Name' and Password = '$encrypted_password'"; // UserName can be anything
            $result = $connection->GetQueryResult($sql);
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    session_start();
                    $_SESSION['id'] = $row['Id'];
                    $_SESSION['role'] = $data->role;
                    break;
                }
                echo json_encode(new HttpResult(array(
                    "id" => $_SESSION["id"],
                    "role" => $_SESSION["role"]
                ), 200));
            } else {
                echo json_encode(new HttpResult("Wrong credentials", 201));
            }
        } else {
            echo json_encode(new HttpResult("Incomplete request", 201));
        }
        break;
    
    case "actor":
        if (isset($data->Name) and isset($data->Password)) { // generated variables
            $encrypted_password = md5($data->Password); // Password can be called anything
            $sql = "SELECT Id FROM $data->role WHERE Name = '$data->Name' and Password = '$encrypted_password'"; // UserName can be anything
            $result = $connection->GetQueryResult($sql);
            if ($result->num_rows > 0) {
                while($row = $result->fetch_assoc()) {
                    session_start();
                    $_SESSION['id'] = $row['Id'];
                    $_SESSION['role'] = $data->role;
                    break;
                }
                echo json_encode(new HttpResult(array(
                    "id" => $_SESSION["id"],
                    "role" => $_SESSION["role"]
                ), 200));
            } else {
                echo json_encode(new HttpResult("Wrong credentials", 201));
            }
        } else {
            echo json_encode(new HttpResult("Incomplete request", 201));
        }
        break;
    
            default: 
                echo json_encode(new HttpResult("Role $data->role does not exists", 201));
                break;
        }

    } else {
        echo json_encode(new HttpResult("Role: " . $data->role . " does not exists", 201));
    }
} else {
    echo json_encode(new HttpResult("Not all fields are filled in correctly", 201));
}
        

?>